
'use client';

import { useState, useEffect } from 'react';

interface Ticket {
  id: string;
  nomPrenom: string;
  departement: string;
  typeMatériel: string;
  description: string;
  priorité: string;
  état: string;
  technicienAssigné: string;
  dateCreation: string;
}

export default function SuiviPage() {
  const [tickets, setTickets] = useState<Ticket[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    const fetchTickets = async () => {
      try {
        const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/tickets`);
        
        if (!response.ok) {
          throw new Error('Erreur de chargement des tickets');
        }
        
        const data = await response.json();
        setTickets(data);
      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };
    
    fetchTickets();
  }, []);

  if (loading) {
    return (
      <div className="flex justify-center items-center h-64">
        <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500"></div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
        {error}
      </div>
    );
  }

  return (
    <div className="overflow-x-auto">
      <h1 className="text-2xl font-bold mb-6">Suivi des Demandes</h1>
      
      <table className="min-w-full bg-white border">
        <thead>
          <tr className="bg-gray-200">
            <th className="py-2 px-4 border">ID Ticket</th>
            <th className="py-2 px-4 border">Demandeur</th>
            <th className="py-2 px-4 border">Département</th>
            <th className="py-2 px-4 border">Type Matériel</th>
            <th className="py-2 px-4 border">Description</th>
            <th className="py-2 px-4 border">Priorité</th>
            <th className="py-2 px-4 border">Statut</th>
            <th className="py-2 px-4 border">Technicien</th>
          </tr>
        </thead>
        <tbody>
          {tickets.length === 0 ? (
            <tr>
              <td colSpan={8} className="py-4 px-4 border text-center">
                Aucun ticket trouvé
              </td>
            </tr>
          ) : (
            tickets.map(ticket => (
              <tr key={ticket.id} className="hover:bg-gray-50">
                <td className="py-2 px-4 border">{ticket.id}</td>
                <td className="py-2 px-4 border">{ticket.nomPrenom}</td>
                <td className="py-2 px-4 border">{ticket.departement}</td>
                <td className="py-2 px-4 border">{ticket.typeMatériel}</td>
                <td className="py-2 px-4 border">{ticket.description}</td>
                <td className="py-2 px-4 border">
                  <span className={`px-2 py-1 rounded ${
                    ticket.priorité === 'Haute' ? 'bg-red-200 text-red-800' :
                    ticket.priorité === 'Moyenne' ? 'bg-yellow-200 text-yellow-800' :
                    'bg-green-200 text-green-800'
                  }`}>
                    {ticket.priorité}
                  </span>
                </td>
                <td className="py-2 px-4 border">
                  <span className={`px-2 py-1 rounded ${
                    ticket.état === 'Nouveau' ? 'bg-blue-200 text-blue-800' :
                    ticket.état === 'Assigné' ? 'bg-purple-200 text-purple-800' :
                    ticket.état === 'Résolu' ? 'bg-green-200 text-green-800' :
                    'bg-gray-200 text-gray-800'
                  }`}>
                    {ticket.état}
                  </span>
                </td>
                <td className="py-2 px-4 border">{ticket.technicienAssigné || '-'}</td>
              </tr>
            ))
          )}
        </tbody>
      </table>
    </div>
  );
}